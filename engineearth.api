
Earth Engine Data Catalog



Earth Engine Data Catalog
Sentinel-1 SAR GRD: C-band Synthetic Aperture Radar Ground Range Detected, log scaling

bookmark
COPERNICUS/S1_GRD
Dataset Availability
2014-10-03T00:00:00Z–2023-11-19T18:01:40
Dataset Provider
European Union/ESA/Copernicus
Earth Engine Snippet
ee.ImageCollection("COPERNICUS/S1_GRD") open_in_new
Tags
copernicus esa eu radar sar sentinel backscatter polarization
Description
Bands
More
The Sentinel-1 mission provides data from a dual-polarization C-band Synthetic Aperture Radar (SAR) instrument at 5.405GHz (C band). This collection includes the S1 Ground Range Detected (GRD) scenes, processed using the Sentinel-1 Toolbox to generate a calibrated, ortho-corrected product. The collection is updated daily. New assets are ingested within two days after they become available.

This collection contains all of the GRD scenes. Each scene has one of 3 resolutions (10, 25 or 40 meters), 4 band combinations (corresponding to scene polarization) and 3 instrument modes. Use of the collection in a mosaic context will likely require filtering down to a homogeneous set of bands and parameters. See this article for details of collection use and preprocessing. Each scene contains either 1 or 2 out of 4 possible polarization bands, depending on the instrument's polarization settings. The possible combinations are single band VV or HH, and dual band VV+VH and HH+HV:

VV: single co-polarization, vertical transmit/vertical receive
HH: single co-polarization, horizontal transmit/horizontal receive
VV + VH: dual-band cross-polarization, vertical transmit/horizontal receive
HH + HV: dual-band cross-polarization, horizontal transmit/vertical receive
Each scene also includes an additional 'angle' band that contains the approximate incidence angle from ellipsoid in degrees at every point. This band is generated by interpolating the 'incidenceAngle' property of the 'geolocationGridPoint' gridded field provided with each asset.

Each scene was pre-processed with Sentinel-1 Toolbox using the following steps:

Thermal noise removal
Radiometric calibration
Terrain correction using SRTM 30 or ASTER DEM for areas greater than 60 degrees latitude, where SRTM is not available. The final terrain-corrected values are converted to decibels via log scaling (10*log10(x)).
For more information about these pre-processing steps, please refer to the Sentinel-1 Pre-processing article. For further advice on working with Sentinel-1 imagery, see Guido Lemoine's tutorial on SAR basics and Mort Canty's tutorial on SAR change detection.

This collection is computed on-the-fly. If you want to use the underlying collection with raw power values (which is updated faster), see COPERNICUS/S1_GRD_FLOAT.

Explore with Earth Engine
Important: Earth Engine is a platform for petabyte-scale scientific analysis and visualization of geospatial datasets, both for public benefit and for business and government users. Earth Engine is free to use for research, education, and nonprofit use. To get started, please sign up for Earth Engine access.
Code Editor (JavaScript)
Colab (Python)
var imgVV = ee.ImageCollection('COPERNICUS/S1_GRD')
        .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))
        .filter(ee.Filter.eq('instrumentMode', 'IW'))
        .select('VV')
        .map(function(image) {
          var edge = image.lt(-30.0);
          var maskedImage = image.mask().and(edge.not());
          return image.updateMask(maskedImage);
        });

var desc = imgVV.filter(ee.Filter.eq('orbitProperties_pass', 'DESCENDING'));
var asc = imgVV.filter(ee.Filter.eq('orbitProperties_pass', 'ASCENDING'));

var spring = ee.Filter.date('2015-03-01', '2015-04-20');
var lateSpring = ee.Filter.date('2015-04-21', '2015-06-10');
var summer = ee.Filter.date('2015-06-11', '2015-08-31');

var descChange = ee.Image.cat(
        desc.filter(spring).mean(),
        desc.filter(lateSpring).mean(),
        desc.filter(summer).mean());

var ascChange = ee.Image.cat(
        asc.filter(spring).mean(),
        asc.filter(lateSpring).mean(),
        asc.filter(summer).mean());

Map.setCenter(5.2013, 47.3277, 12);
Map.addLayer(ascChange, {min: -25, max: 5}, 'Multi-T Mean ASC', true);
Map.addLayer(descChange, {min: -25, max: 5}, 'Multi-T Mean DESC', true);
Open in Code Editor
GitHubGitHub
MediumMedium
GIS Stack ExchangeGIS Stack Exchange
TwitterTwitter
VideosVideos
Connect
Blog
Instagram
LinkedIn
Twitter
YouTube
Programs
Women Techmakers
Google Developer Groups
Google Developer Experts
Accelerators
Google Developer Student Clubs
Developer consoles
Google API Console
Google Cloud Platform Console
Google Play Console
Firebase Console
Actions on Google Console
Cast SDK Developer Console
Chrome Web Store Dashboard
Google Developers
Android
Chrome
Firebase
Google Cloud Platform
All products
Terms
Privacy
Sign up for the Google for Developers newsletter
Subscribe

Englis
Earth Engine Data Catalog



Earth Engine Data Catalog
Sentinel-1 SAR GRD: C-band Synthetic Aperture Radar Ground Range Detected, log scaling

bookmark
COPERNICUS/S1_GRD
Dataset Availability
2014-10-03T00:00:00Z–2023-11-19T18:01:40
Dataset Provider
European Union/ESA/Copernicus
Earth Engine Snippet
ee.ImageCollection("COPERNICUS/S1_GRD") open_in_new
Tags
copernicus esa eu radar sar sentinel backscatter polarization
Description
Bands
More
The Sentinel-1 mission provides data from a dual-polarization C-band Synthetic Aperture Radar (SAR) instrument at 5.405GHz (C band). This collection includes the S1 Ground Range Detected (GRD) scenes, processed using the Sentinel-1 Toolbox to generate a calibrated, ortho-corrected product. The collection is updated daily. New assets are ingested within two days after they become available.

This collection contains all of the GRD scenes. Each scene has one of 3 resolutions (10, 25 or 40 meters), 4 band combinations (corresponding to scene polarization) and 3 instrument modes. Use of the collection in a mosaic context will likely require filtering down to a homogeneous set of bands and parameters. See this article for details of collection use and preprocessing. Each scene contains either 1 or 2 out of 4 possible polarization bands, depending on the instrument's polarization settings. The possible combinations are single band VV or HH, and dual band VV+VH and HH+HV:

VV: single co-polarization, vertical transmit/vertical receive
HH: single co-polarization, horizontal transmit/horizontal receive
VV + VH: dual-band cross-polarization, vertical transmit/horizontal receive
HH + HV: dual-band cross-polarization, horizontal transmit/vertical receive
Each scene also includes an additional 'angle' band that contains the approximate incidence angle from ellipsoid in degrees at every point. This band is generated by interpolating the 'incidenceAngle' property of the 'geolocationGridPoint' gridded field provided with each asset.

Each scene was pre-processed with Sentinel-1 Toolbox using the following steps:

Thermal noise removal
Radiometric calibration
Terrain correction using SRTM 30 or ASTER DEM for areas greater than 60 degrees latitude, where SRTM is not available. The final terrain-corrected values are converted to decibels via log scaling (10*log10(x)).
For more information about these pre-processing steps, please refer to the Sentinel-1 Pre-processing article. For further advice on working with Sentinel-1 imagery, see Guido Lemoine's tutorial on SAR basics and Mort Canty's tutorial on SAR change detection.

This collection is computed on-the-fly. If you want to use the underlying collection with raw power values (which is updated faster), see COPERNICUS/S1_GRD_FLOAT.

Explore with Earth Engine
Important: Earth Engine is a platform for petabyte-scale scientific analysis and visualization of geospatial datasets, both for public benefit and for business and government users. Earth Engine is free to use for research, education, and nonprofit use. To get started, please sign up for Earth Engine access.
Code Editor (JavaScript)
Colab (Python)
var imgVV = ee.ImageCollection('COPERNICUS/S1_GRD')
        .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))
        .filter(ee.Filter.eq('instrumentMode', 'IW'))
        .select('VV')
        .map(function(image) {
          var edge = image.lt(-30.0);
          var maskedImage = image.mask().and(edge.not());
          return image.updateMask(maskedImage);
        });

var desc = imgVV.filter(ee.Filter.eq('orbitProperties_pass', 'DESCENDING'));
var asc = imgVV.filter(ee.Filter.eq('orbitProperties_pass', 'ASCENDING'));

var spring = ee.Filter.date('2015-03-01', '2015-04-20');
var lateSpring = ee.Filter.date('2015-04-21', '2015-06-10');
var summer = ee.Filter.date('2015-06-11', '2015-08-31');

var descChange = ee.Image.cat(
        desc.filter(spring).mean(),
        desc.filter(lateSpring).mean(),
        desc.filter(summer).mean());

var ascChange = ee.Image.cat(
        asc.filter(spring).mean(),
        asc.filter(lateSpring).mean(),
        asc.filter(summer).mean());

Map.setCenter(5.2013, 47.3277, 12);
Map.addLayer(ascChange, {min: -25, max: 5}, 'Multi-T Mean ASC', true);
Map.addLayer(descChange, {min: -25, max: 5}, 'Multi-T Mean DESC', true);
Open in Code Editor
GitHubGitHub
MediumMedium
GIS Stack ExchangeGIS Stack Exchange
TwitterTwitter
VideosVideos
Connect
Blog
Instagram
LinkedIn
Twitter
YouTube
Programs
Women Techmakers
Google Developer Groups
Google Developer Experts
Accelerators
Google Developer Student Clubs
Developer consoles
Google API Console
Google Cloud Platform Console
Google Play Console
Firebase Console
Actions on Google Console
Cast SDK Developer Console
Chrome Web Store Dashboard
Google Developers
Android
Chrome
Firebase
Google Cloud Platform
All products
Terms
Privacy
Sign up for the Google for Developers newsletter
Subscribe

English
